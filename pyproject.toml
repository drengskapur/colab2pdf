[project]
name = "colab2pdf"
dynamic = ["version"]
description = 'Convert Your Colab Notebook to a PDF. One-Minute Install. Zero Configuration.'
readme = "README.md"
license = "GPL-3.0-or-later"
authors = [{ name = "Drengskapur", email = "service@drengskapur.com" }]
dependencies = [
  "click",
  "ipywidgets",
  "nbformat",
  "PyYAML",
  "requests",
  "Werkzeug",
]
requires-python = ">=3.10"
keywords = [
  "ai",
  "artificial-intelligence",
  "colab",
  "colab-notebook",
  "colab-notebooks",
  "data-science",
  "deep-learning",
  "google",
  "google-colab",
  "google-colaboratory",
  "jupyter-notebook",
  "jupyter-notebooks",
  "machine-learning",
  "ml",
  "pdf",
  "python",
  "python3",
  "pytorch",
  "tensorflow",
  "torch",
]
classifiers = [
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Operating System :: POSIX',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: MacOS :: MacOS X',
  'Operating System :: OS Independent',
  'Topic :: Internet :: WWW/HTTP',
]
[project.urls]
Homepage = "https://github.com/drengskapur/colab2pdf/"
Repository = "https://github.com/drengskapur/colab2pdf/"

[project.scripts]
colab2pdf = "colab2pdf.__main__:main"

[tool.rye]
managed = true
dev-dependencies = [
  "pyright>=1.1.359",
  "google-colab",
  "mypy",
  "pytest",
  "ruff",
]

[tool.rye.scripts]
format = { chain = ["format:ruff", "format:docs", "fix:ruff"] }
"format:black" = "black ."
"format:docs" = "README.md"
"format:ruff" = "ruff format"
"format:isort" = "isort ."
"lint" = { chain = ["check:ruff", "typecheck"] }
"check:ruff" = "ruff ."
"fix:ruff" = "ruff --fix ."
typecheck = { chain = ["typecheck:pyright", "typecheck:mypy"] }
"typecheck:pyright" = "pyright"
"typecheck:verify-types" = "pyright --verifytypes openai --ignoreexternal"
"typecheck:mypy" = "mypy ."

[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["src/*"]

[tool.hatch.build.targets.wheel]
packages = ["src/colab2pdf"]

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/.vscode", "/tests"]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
pattern = '\[(.+?)\]\(((?!https?://)\S+?)\)'
replacement = '[\1](https://github.com/drengskapur/colab2pdf/tree/main/\g<2>)'

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--tb=short"
xfail_strict = true
asyncio_mode = "auto"
filterwarnings = ["error"]

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.10"
exclude = [".venv", ".nox"]
reportImplicitOverride = true
reportImportCycles = false
reportPrivateUsage = false

[tool.hatch.version]
path = "src/colab2pdf/__about__.py"

[tool.hatch.envs.default]
dependencies = ["coverage[toml]>=6.5", "pytest"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.10"]

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py310"
select = [
  "I",      # ISORT
  "B",      # BUGBEAR RULES
  "F401",   # REMOVE UNUSED IMPORTS
  "E722",   # BARE EXCEPT STATEMENTS
  "ARG",    # UNUSED ARGUMENTS
  "T201",   # PRINT STATEMENTS
  "T203",   # PPRINT STATEMENTS
  "TCH004", # MISUSE of typing.TYPE_CHECKING
  "TID251", # IMPORT RULES
]
ignore = [
  "B006", # MUTABLE DEFAULTS
]
unfixable = [
  "T201", # DISABLE FIX FOR PRINT STATEMENTS
  "T203", # DISABLE FIX FOR PPRINT STATEMENTS
]
ignore-init-module-imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"functools.lru_cache".msg = "This function does not retain type information for the wrapped function's arguments; The `lru_cache` function from `_utils` should be used instead"

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
known-first-party = ["openai", "tests"]
