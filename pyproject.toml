[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "colab2pdf"
dynamic = ["version"]
authors = [{ name = "Drengskapur", email = "service@drengskapur.com" }]
description = 'Convert Your Colab Notebook to a PDF. One-Minute Install. Zero Configuration.'
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Operating System :: POSIX',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: MacOS :: MacOS X',
  'Operating System :: OS Independent',
  'Topic :: Internet :: WWW/HTTP',
]
license = "GPL-3.0-or-later"
keywords = [
  "ai",
  "artificial-intelligence",
  "colab",
  "colab-notebook",
  "colab-notebooks",
  "data-science",
  "deep-learning",
  "google",
  "google-colab",
  "google-colaboratory",
  "jupyter-notebook",
  "jupyter-notebooks",
  "machine-learning",
  "ml",
  "pdf",
  "python",
  "python3",
  "pytorch",
  "tensorflow",
  "torch",
]


dependencies = [
  "click",
  "ipywidgets",
  "nbformat",
  "pytest",
  "PyYAML",
  "requests",
  "requests",
  "Werkzeug",
]

[project.scripts]
colab2pdf = "src.colab2pdf.cli:cli"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/.vscode", "/tests"]

[tool.hatch.build.targets.wheel]
packages = ["src/colab2pdf"]

[tool.pytest.ini_options]
addopts = ["--doctest-modules", "--ignore=setup.py"]


[project.urls]
Documentation = "https://github.com/drengskapur/colab2pdf/README.md"
Issues = "https://github.com/drengskapur/colab2pdf/issues"
Source = "https://github.com/drengskapur/colab2pdf"


[tool.hatch.version]
path = "src/colab2pdf/__about__.py"


[tool.hatch.envs.default]
dependencies = ["coverage[toml]>=6.5", "pytest"]


[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]


[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]


[tool.hatch.envs.lint]
detached = true
dependencies = ["black==24.4.2", "mypy==1.10.0", "ruff==0.4.2"]


[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/colab2pdf tests}"
style = ["ruff {args:.}", "black --check --diff {args:.}"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
all = ["style", "typing"]


[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true


[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["colab2pdf"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["colab2pdf", "tests"]
branch = true
parallel = true
omit = ["src/colab2pdf/__about__.py"]

[tool.coverage.paths]
colab2pdf = ["colab2pdf"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
